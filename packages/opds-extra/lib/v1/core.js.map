{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAoH;AACpH,oCAAkC;AAClC,oBAAkB;AAClB,oCAAwG;AACxG,kCAAiE;AACjE,iCAAkC;AAClC,6BAA8B;AAE9B,aAAa;AACb,MAAa,KAAM,SAAQ,cAAM,CAAC,IAAkB;CAOnD;AAJA;IADC,wBAAY,EAAE;;2CACqC;AAGpD;IADC,wBAAY,EAAE;;oCACM;AANtB,sBAOC;AAcD,aAAa;AACb,MAAa,IAAK,SAAQ,cAAM,CAAC,IAAiB;IAKjD,IAAW,IAAI;QAEd,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAClC;YACC,OAAO,IAAI,CAAC,KAAK,CAAA;SACjB;aACI,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,EAC1D;YACC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;SACtB;IACF,CAAC;IAED,IAAW,IAAI,CAAC,KAAmB;QAElC,IAAI,CAAC,GAAG,cAAO,CAAC,KAAK,CAAC,CAAC;QAEvB,IAAI,CAAC,IAAI,IAAI,EACb;YACC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SACf;IACF,CAAC;IAcD,IAAW,KAAK;QAEf,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EACvB;YACC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAC/B;gBACC,OAAO,IAAI,CAAC,MAAM,CAAA;aAClB;iBACI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAChC;gBACC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;aACrB;SACD;QAED,OAAO;IACR,CAAC;IAGD,IAAW,MAAM;QAEhB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EACxD;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;SACnB;IACF,CAAC;IAED;;OAEG;IACH,IAAW,MAAM,CAAC,KAA0C;QAE3D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,IAAW,KAAK,CAAC,KAA0C;QAE1D,IAAI,CAAC,GAAG,wBAAiB,CAAgB,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAEjE,IAAI,CAAC,IAAI,IAAI,EACb;YACC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAChB;IACF,CAAC;IAEM,aAAa;QAEnB,IAAI,IAAI,CAAC,GAAG,EACZ;YACC,OAAO,iBAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YAC3B,6CAA6C;SAC7C;IACF,CAAC;CAcD;AAnGA;IADC,wBAAY,EAAE;;;gCAWd;AAaD;IADC,wBAAY,EAAE;;iCACI;AAGnB;IADC,wBAAY,EAAE;;mCACoB;AAGnC;IADC,wBAAY,EAAE;;kCACgB;AAK/B;IADC,wBAAY,EAAE;;;iCAgBd;AAGD;IADC,wBAAY,EAAE;;;kCAOd;AAiCD;IADC,wBAAY,EAAE;;sCACG;AAMlB;IADC,wBAAY,EAAE;;oCACC;AAtGjB,oBAwGC;AAmBD,aAAa;AACb,MAAa,MAAO,SAAQ,cAAM,CAAC,IAAmB;IAErD,YAAY,KAAsB;QAEjC,KAAK,EAAE,CAAC;QAER,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC7B;YACC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SACjB;aACI,IAAI,KAAK,IAAI,IAAI,EACtB;YACC,IAAI,CAAS,CAAC;YACd,CAAC,GAAG,MAAM,CAAC,WAAW,CAAS,KAAK,CAAC,CAAC;YAEtC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAChB;gBACC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAA;aACF;SACD;IACF,CAAC;CAUD;AAPA;IADC,wBAAY,EAAE;;oCACK;AAGpB;IADC,wBAAY,EAAE;;mCACK;AAGpB;IADC,wBAAY,EAAE;;qCACO;AA/BvB,wBAgCC;AAeD,aAAa;AACb,MAAa,YAAa,SAAQ,cAAM,CAAC,IAAyB;CAOjE;AAJA;IADC,wBAAY,EAAE;;0CACwB;AAGvC;IADC,wBAAY,EAAE;;2CACM;AANtB,oCAOC;AAaD,MAAa,aAAc,SAAQ,cAAM,CAAC,IAA0B;IAcnE,IAAW,IAAI,CAAC,KAAa;QAE5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACnB,CAAC;CACD;AAfA;IADC,wBAAY,EAAE;;2CACK;AAGpB;IADC,wBAAY,EAAE;;4CACO;AAGtB;IADC,wBAAY,EAAE;;6CACQ;AAKvB;IAHC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;IACvB,yBAAa,EAAE;;;yCAIf;AAjBF,sCAkBC;AAmBD,aAAa;AACb,MAAa,KAAM,SAAQ,cAAM,CAAC,IAAkB;IAqBnD,IAAW,OAAO;QAEjB,IAAI,IAAI,CAAC,QAAQ,EACjB;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;SAC7B;IACF,CAAC;IAED,IAAW,OAAO,CAAC,QAA4B;QAE9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAKD,IAAW,SAAS;QAEnB,IAAI,IAAI,CAAC,UAAU,EACnB;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAA;SAC/B;IACF,CAAC;IAED,IAAW,SAAS,CAAC,QAA4B;QAEhD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3E,CAAC;IAKD,IAAW,MAAM;QAEhB,IAAI,IAAI,CAAC,OAAO,EAChB;YACC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAA;SAC5B;IACF,CAAC;IAED,IAAW,MAAM,CAAC,QAA4B;QAE7C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxE,CAAC;IAeD,IAAW,UAAU;QAEpB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAC9D;YACC,OAAO,IAAI,CAAC,WAAW,CAAC;SACxB;IACF,CAAC;IAED,IAAW,UAAU,CAAC,KAA0D;QAE/E,IAAI,CAAC,GAAG,wBAAiB,CAAwB,KAAK,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;QAEjF,IAAI,CAAC,IAAI,IAAI,EACb;YACC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACrB;IACF,CAAC;IAKD,IAAW,KAAK,CAAC,GAAiB;QAEjC,IAAI,CAAC,GAAG,cAAO,CAAC,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,IAAI,IAAI,EACb;YACC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;iBAC7B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,mBAAW,CAAC,KAAK,CAAC,CACxC;YAED,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACnB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;YACX,CAAC,CAAC,GAAG,GAAG,mBAAW,CAAC,KAAK,CAAC;YAC1B,CAAC,CAAC,IAAI,GAAG,gBAAQ,CAAC,GAAG,CAAC;YAEtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;IACF,CAAC;IAcD,SAAS,CAAC,KAAqB;QAE9B,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EACrB;YACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAErB,OAAO,CAAC,CAAC;SACT;IACF,CAAC;CACD;AA5IA;IADC,wBAAY,EAAE;;iCACG;AAGlB;IADC,wBAAY,EAAE;;yCACW;AAG1B;IADC,wBAAY,EAAE;;oCACM;AAGrB;IADC,wBAAY,EAAE;;uCACU;AAIzB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;sCACE;AAK1B;IADC,wBAAY,EAAE;;;oCAOd;AAUD;IADC,wBAAY,EAAE;;;sCAOd;AAUD;IADC,wBAAY,EAAE;;;mCAOd;AASD;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,IAAI,CAAC;;oCACD;AAGrB;IADC,wBAAY,EAAE;;sCACS;AAGxB;IADC,wBAAY,EAAE;8BACE,YAAY;sCAAC;AAK9B;IADC,wBAAY,EAAE;;;uCAOd;AAeD;IAHC,wBAAY,EAAE;IACd,2BAAe,CAAC,GAAG,CAAC;IACpB,yBAAa,EAAE;;;kCAkBf;AAGD;IADC,wBAAY,EAAE;;wCACW;AAG1B;IADC,wBAAY,EAAE;;uCACU;AAGzB;IADC,wBAAY,EAAE;;qCACQ;AAGvB;IADC,wBAAY,EAAE;;qCACQ;AAjIxB,sBA+IC;AA2BD,aAAa;AACb,MAAa,IAAK,SAAQ,cAAM,CAAC,IAAiB;IAIvC,kBAAkB;QAE3B,IAAI,CAAC,QAAQ,GAAG,MAAM,EAAE,CAAC;IAC1B,CAAC;IAyBD,IAAW,OAAO;QAEjB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAA;IAChC,CAAC;IAED,IAAW,OAAO,CAAC,QAA4B;QAE9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAcD,SAAS,CAAC,KAAqB;QAE9B,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EACrB;YACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAErB,OAAO,CAAC,CAAC;SACT;IACF,CAAC;IAED,KAAK;QAEJ,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAA;IACpC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAY;QAE3B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;IACzC,CAAC;IAMD,MAAM,CAAC,WAAW,CAAwC,IAAO,EAAE,OAAuB;QAEzF,aAAa;QACb,OAAO,kBAAM,CAAC,WAAW,CAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,SAAS,CAAiB,IAAY,EAAE,OAAuB;QAErE,aAAa;QACb,OAAO,kBAAM,CAAC,KAAK,CAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IAC5C,CAAC;CAED;AAzFA;IADC,8BAAkB,EAAE;;;;8CAIpB;AAID;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;gCACL;AAInB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;mCACH;AAGrB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;sCACA;AAIxB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;kCACH;AAIrB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;kCACH;AAMrB;IAFC,wBAAY,CAAC,SAAS,CAAC;IACvB,2BAAe,CAAC,MAAM,CAAC;;;mCAIvB;AASD;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;qCACE;AAI1B;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,IAAI,CAAC;;mCACA;AAItB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,KAAK,CAAC;;mCACA;AA2BvB;IAFC,wBAAY,EAAE;IACd,2BAAe,CAAC,MAAM,CAAC;;oCACD;AA/ExB,oBA6FC","sourcesContent":["import { BeforeDeserialized, IParseOptions, JsonElementType, JsonProperty, JsonWriteonly, TaJson } from 'ta-json-x';\nimport { Schema } from '../class';\nimport '../debug';\nimport { EnumEntryContent, EnumLinkRel, EnumMIME, EnumPriceCurrencyCode, REL_BASE_URL } from '../const';\nimport { getOPDSRel, hrefURL, typedOrObjectList } from '../util';\nimport moment = require(\"moment\");\nimport xml = require(\"./xml\");\n\n// @ts-ignore\nexport class Price extends Schema.Base<Price.TSTYPE>\n{\n\t@JsonProperty()\n\tpublic currencycode: string | EnumPriceCurrencyCode;\n\n\t@JsonProperty()\n\tpublic value: number;\n}\n\nexport declare namespace Price\n{\n\texport interface TSTYPE\n\t{\n\t\tcurrencycode?: string | EnumPriceCurrencyCode,\n\t\tvalue: number,\n\t}\n\n\texport type TSTYPE1 = number;\n\texport type TSTYPE2 = Price | TSTYPE1 | TSTYPE;\n}\n\n// @ts-ignore\nexport class Link extends Schema.Base<Link.TSTYPE>\n{\n\tprotected _href: string | URL;\n\n\t@JsonProperty()\n\tpublic get href()\n\t{\n\t\tif (typeof this._href === 'string')\n\t\t{\n\t\t\treturn this._href\n\t\t}\n\t\telse if (this._href && typeof this._href.href === 'string')\n\t\t{\n\t\t\treturn this._href.href\n\t\t}\n\t}\n\n\tpublic set href(value: string | URL)\n\t{\n\t\tlet r = hrefURL(value);\n\n\t\tif (r != null)\n\t\t{\n\t\t\tthis._href = r;\n\t\t}\n\t}\n\n\t@JsonProperty()\n\tpublic rel: string;\n\n\t@JsonProperty()\n\tpublic title: string | EnumLinkRel;\n\n\t@JsonProperty()\n\tpublic type: string | EnumMIME;\n\n\tprotected _price: (Price | number)[];\n\n\t@JsonProperty()\n\tpublic get price()\n\t{\n\t\tif (this._price != null)\n\t\t{\n\t\t\tif (!Array.isArray(this._price))\n\t\t\t{\n\t\t\t\treturn this._price\n\t\t\t}\n\t\t\telse if (this._price.length == 1)\n\t\t\t{\n\t\t\t\treturn this._price[0]\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\t@JsonProperty()\n\tpublic get prices()\n\t{\n\t\tif (Array.isArray(this._price) && this._price.length > 1)\n\t\t{\n\t\t\treturn this._price;\n\t\t}\n\t}\n\n\t/**\n\t * @alias price\n\t */\n\tpublic set prices(value: Price | number | (Price | number)[])\n\t{\n\t\tthis.price = value;\n\t}\n\n\tpublic set price(value: Price | number | (Price | number)[])\n\t{\n\t\tlet r = typedOrObjectList<number, Price>(value, 'number', Price);\n\n\t\tif (r != null)\n\t\t{\n\t\t\tthis._price = r;\n\t\t}\n\t}\n\n\tpublic getRelFullURL()\n\t{\n\t\tif (this.rel)\n\t\t{\n\t\t\treturn getOPDSRel(this.rel)\n\t\t\t//return new URL(this.rel, REL_BASE_URL).href\n\t\t}\n\t}\n\n\t/**\n\t * 語系\n\t */\n\t@JsonProperty()\n\threflang?: string;\n\n\t/**\n\t * 連結內容的大小，當rel為enclosure時，應該要有此屬性\n\t */\n\t@JsonProperty()\n\tlength?: number;\n\n}\n\nexport declare namespace Link\n{\n\texport interface TSTYPE\n\t{\n\t\thref: string | URL;\n\t\trel?: string;\n\t\ttitle?: string | EnumLinkRel;\n\t\ttype?: string | EnumMIME;\n\t\tprice?: Price.TSTYPE2 | Price.TSTYPE2[];\n\t\tprices?: Price.TSTYPE2 | Price.TSTYPE2[];\n\t\threflang?: string;\n\t\tlength?: number;\n\t}\n\n\texport type TSTYPE2 = Link | TSTYPE\n}\n\n// @ts-ignore\nexport class Author extends Schema.Base<Author.TSTYPE>\n{\n\tconstructor(value?: Author.TSTYPE2)\n\t{\n\t\tsuper();\n\n\t\tif (typeof value === 'string')\n\t\t{\n\t\t\tthis.name = value\n\t\t}\n\t\telse if (value != null)\n\t\t{\n\t\t\tlet u: Author;\n\t\t\tu = Author.deserialize<Author>(value);\n\n\t\t\tif (u._isvaild())\n\t\t\t{\n\t\t\t\tObject.keys(u).forEach(k => {\n\t\t\t\t\tthis[k] = u[k];\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t@JsonProperty()\n\tpublic name: string;\n\n\t@JsonProperty()\n\tpublic uri?: string;\n\n\t@JsonProperty()\n\tpublic email?: string;\n}\n\nexport declare namespace Author\n{\n\texport interface TSTYPE\n\t{\n\t\tname: string;\n\t\turi?: string;\n\t\temail?: string;\n\t}\n\n\texport type TSTYPE1 = string\n\texport type TSTYPE2 = Author | TSTYPE1 | TSTYPE\n}\n\n// @ts-ignore\nexport class EntryContent extends Schema.Base<EntryContent.TSTYPE>\n{\n\t@JsonProperty()\n\tpublic type: string | EnumEntryContent;\n\n\t@JsonProperty()\n\tpublic value: string;\n}\n\nexport declare namespace EntryContent\n{\n\texport interface TSTYPE\n\t{\n\t\ttype: string | EnumEntryContent;\n\t\tvalue: string;\n\t}\n\n\texport type TSTYPE2 = EntryContent | TSTYPE;\n}\n\nexport class EntryCategory extends Schema.Base<EntryCategory.TSTYPE>\n{\n\t@JsonProperty()\n\tpublic term: string;\n\n\t@JsonProperty()\n\tpublic label?: string;\n\n\t@JsonProperty()\n\tpublic scheme?: string;\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\t@JsonWriteonly()\n\tpublic set code(value: string)\n\t{\n\t\tthis.term = value;\n\t}\n}\n\nexport declare namespace EntryCategory\n{\n\texport type TSTYPE = ({\n\t\tcode?: string;\n\t\tterm: string;\n\t} | {\n\t\tcode: string;\n\t\tterm?: string;\n\t}) & {\n\t\tlabel?: string;\n\t\tscheme?: string;\n\t}\n\n\texport type TSTYPE1 = string;\n\texport type TSTYPE2 = EntryCategory | TSTYPE1 | TSTYPE;\n}\n\n// @ts-ignore\nexport class Entry extends Schema.Base<Entry.TSTYPE>\n{\n\t@JsonProperty()\n\tpublic id: string;\n\n\t@JsonProperty()\n\tpublic identifier: string;\n\n\t@JsonProperty()\n\tpublic title: string;\n\n\t@JsonProperty()\n\tpublic subtitle?: string;\n\n\t@JsonProperty()\n\t@JsonElementType(Author)\n\tpublic authors?: Author[];\n\n\tprotected _updated: moment.Moment;\n\n\t@JsonProperty()\n\tpublic get updated()\n\t{\n\t\tif (this._updated)\n\t\t{\n\t\t\treturn this._updated.toDate()\n\t\t}\n\t}\n\n\tpublic set updated(_updated: moment.MomentInput)\n\t{\n\t\tthis._updated = moment.isMoment(_updated) ? _updated : moment(_updated);\n\t}\n\n\tprotected _published: moment.Moment;\n\n\t@JsonProperty()\n\tpublic get published()\n\t{\n\t\tif (this._published)\n\t\t{\n\t\t\treturn this._published.toDate()\n\t\t}\n\t}\n\n\tpublic set published(_updated: moment.MomentInput)\n\t{\n\t\tthis._published = moment.isMoment(_updated) ? _updated : moment(_updated);\n\t}\n\n\tprotected _issued: moment.Moment;\n\n\t@JsonProperty()\n\tpublic get issued()\n\t{\n\t\tif (this._issued)\n\t\t{\n\t\t\treturn this._issued.toDate()\n\t\t}\n\t}\n\n\tpublic set issued(_updated: moment.MomentInput)\n\t{\n\t\tthis._issued = moment.isMoment(_updated) ? _updated : moment(_updated);\n\t}\n\n\t@JsonProperty()\n\t@JsonElementType(Link)\n\tpublic links: Link[];\n\n\t@JsonProperty()\n\tpublic summary?: string;\n\n\t@JsonProperty()\n\tpublic content?: EntryContent;\n\n\tprotected _categories?: (string | EntryCategory)[];\n\n\t@JsonProperty()\n\tpublic get categories()\n\t{\n\t\tif (Array.isArray(this._categories) && this._categories.length)\n\t\t{\n\t\t\treturn this._categories;\n\t\t}\n\t}\n\n\tpublic set categories(value: EntryCategory | string | (EntryCategory | string)[])\n\t{\n\t\tlet r = typedOrObjectList<string, EntryCategory>(value, 'string', EntryCategory);\n\n\t\tif (r != null)\n\t\t{\n\t\t\tthis._categories = r;\n\t\t}\n\t}\n\n\t@JsonProperty()\n\t@JsonElementType(URL)\n\t@JsonWriteonly()\n\tpublic set image(url: string | URL)\n\t{\n\t\tlet r = hrefURL(url);\n\n\t\tif (r != null)\n\t\t{\n\t\t\tthis.links = (this.links || [])\n\t\t\t\t.filter(v => v.rel != EnumLinkRel.IMAGE)\n\t\t\t;\n\n\t\t\tlet u = new Link();\n\t\t\tu.href = r;\n\t\t\tu.rel = EnumLinkRel.IMAGE;\n\t\t\tu.type = EnumMIME.jpg;\n\n\t\t\tthis.links.push(u);\n\t\t}\n\t}\n\n\t@JsonProperty()\n\tpublic publisher?: string;\n\n\t@JsonProperty()\n\tpublic language?: string;\n\n\t@JsonProperty()\n\tpublic rights?: string;\n\n\t@JsonProperty()\n\tpublic source?: string;\n\n\taddAuthor(value: Author.TSTYPE2)\n\t{\n\t\tlet u = new Author(value);\n\n\t\tif (u && u._isvaild())\n\t\t{\n\t\t\tthis.authors = this.authors || [];\n\t\t\tthis.authors.push(u);\n\n\t\t\treturn u;\n\t\t}\n\t}\n}\n\nexport declare namespace Entry\n{\n\texport interface TSTYPE\n\t{\n\t\tid?: string;\n\t\tidentifier?: string;\n\t\ttitle: string;\n\t\tauthors?: Author.TSTYPE2[];\n\t\tupdated?: moment.MomentInput;\n\t\tpublished?: moment.MomentInput;\n\t\tissued?: moment.MomentInput;\n\t\tlinks: Link.TSTYPE2[];\n\t\tsummary?: string;\n\t\tcontent?: EntryContent.TSTYPE2;\n\t\tcategories?: EntryCategory.TSTYPE2 | EntryCategory.TSTYPE2[];\n\t\timage?: string | URL;\n\t\tpublisher?: string;\n\t\tlanguage?: string;\n\t\trights?: string;\n\t\tsource?: string;\n\t}\n\n\texport type TSTYPE2 = Entry | TSTYPE\n}\n\n// @ts-ignore\nexport class Feed extends Schema.Base<Feed.TSTYPE>\n{\n\n\t@BeforeDeserialized()\n\tprotected BeforeDeserialized()\n\t{\n\t\tthis._updated = moment();\n\t}\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic id?: string;\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic title: string;\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic subtitle: string;\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic icon?: string;\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic logo?: string;\n\n\tprotected _updated: moment.Moment;\n\n\t@JsonProperty('updated')\n\t@JsonElementType(Number)\n\tpublic get updated()\n\t{\n\t\treturn (this._updated).toDate()\n\t}\n\n\tpublic set updated(_updated: moment.MomentInput)\n\t{\n\t\tthis._updated = moment.isMoment(_updated) ? _updated : moment(_updated);\n\t}\n\n\t@JsonProperty()\n\t@JsonElementType(Author)\n\tpublic authors?: Author[];\n\n\t@JsonProperty()\n\t@JsonElementType(Link)\n\tpublic links?: Link[];\n\n\t@JsonProperty()\n\t@JsonElementType(Entry)\n\tpublic books?: Entry[];\n\n\taddAuthor(value: Author.TSTYPE2)\n\t{\n\t\tlet u = new Author(value);\n\n\t\tif (u && u._isvaild())\n\t\t{\n\t\t\tthis.authors = this.authors || [];\n\t\t\tthis.authors.push(u);\n\n\t\t\treturn u;\n\t\t}\n\t}\n\n\ttoXML()\n\t{\n\t\treturn xml.create(this.serialize())\n\t}\n\n\tstatic parseXML(data: string)\n\t{\n\t\treturn this.deserialize(xml.parse(data))\n\t}\n\n\t@JsonProperty()\n\t@JsonElementType(String)\n\tpublic source?: string;\n\n\tstatic deserialize<T extends Feed, J extends Feed.TSTYPE>(json: J, options?: IParseOptions): T\n\t{\n\t\t// @ts-ignore\n\t\treturn TaJson.deserialize<T>(json, this, options);\n\t}\n\n\tstatic parseJSON<T extends Feed>(json: string, options?: IParseOptions): T\n\t{\n\t\t// @ts-ignore\n\t\treturn TaJson.parse<T>(json, this, options)\n\t}\n\n}\n\nexport declare namespace Feed\n{\n\texport interface TSTYPE\n\t{\n\t\tid?: string;\n\t\ttitle: string;\n\t\tsubtitle?: string;\n\t\ticon?: string;\n\t\tupdated?: moment.MomentInput;\n\t\tauthors?: Author.TSTYPE2[];\n\t\tlinks?: Link.TSTYPE2[];\n\t\tbooks?: Entry.TSTYPE2[];\n\t\tsource?: string;\n\t}\n}\n"]}