{"version":3,"file":"class.js","sourceRoot":"","sources":["class.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;AAEH,yCAAiK;AAEjK,4BAA0B;AAI1B,IAAiB,MAAM,CAwEtB;AAxED,WAAiB,MAAM;IAGtB,IAAsB,IAAI,GAA1B,MAAsB,IAAI;QAGzB,YAAY,GAAG,IAAI;YAElB,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACrB,CAAC;QAGS,KAAK,CAAC,GAAG,IAAI;YAEtB,IAAI,IAAI,CAAC,kBAAkB,EAC3B;gBACC,IAAI,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;aACjC;QACF,CAAC;QAGS,kBAAkB,CAAC,GAAG,IAAI,IAAE,CAAC;QAAA,CAAC;QAExC,SAAS,CAAC,MAAyB;YAElC,IAAI,MAAM,KAAK,KAAK,EACpB;gBACC,MAAM,GAAG,EAAE,CAAC;aACZ;YAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAC9B;gBACC,MAAM,GAAG,IAAI,CAAC;aACd;YAED,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACvD,CAAC;QAED,SAAS;YAER,OAAO,kBAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAID,MAAM,CAAC,WAAW,CAAqD,IAAO,EAAE,OAAuB;YAEtG,OAAO,kBAAM,CAAC,WAAW,CAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAQ,CAAC;QAC1D,CAAC;QAED,MAAM,CAAC,KAAK,CAAiB,IAAY,EAAE,OAAuB;YAEjE,OAAO,kBAAM,CAAC,KAAK,CAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;QAC5C,CAAC;QAED,QAAQ;YAEP,IAAI,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;YAEpE,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QACtB,CAAC;KAED,CAAA;IAlDA;QADC,2BAAe,EAAE;;;;qCAOjB;IAGD;QADC,8BAAkB,EAAE;;;;kDACkB;IAlBlB,IAAI;QADzB,sBAAU,EAAE;;OACS,IAAI,CA2DzB;IA3DqB,WAAI,OA2DzB,CAAA;AAUF,CAAC,EAxEgB,MAAM,GAAN,cAAM,KAAN,cAAM,QAwEtB;AAED,kBAAe,OAAmC,CAAC","sourcesContent":["/**\n * Created by user on 2019/3/7.\n */\n\nimport { IParseOptions, JsonElementType, JsonObject, JsonProperty, JsonWriteonly, TaJson, BeforeDeserialized, OnDeserialized, JsonConstructor } from \"ta-json-x\";\nimport util = require('util');\nimport \"reflect-metadata\";\nimport SymbolInspect = require('symbol.inspect');\nimport { EnumPriceCurrencyCode } from './const';\n\nexport namespace Schema\n{\n\t@JsonObject()\n\texport abstract class Base<D extends Base.TSTYPE = Base.TSTYPE>\n\t{\n\n\t\tconstructor(...argv)\n\t\t{\n\t\t\tthis._init(...argv);\n\t\t}\n\n\t\t@JsonConstructor()\n\t\tprotected _init(...argv)\n\t\t{\n\t\t\tif (this.BeforeDeserialized)\n\t\t\t{\n\t\t\t\tthis.BeforeDeserialized(...argv);\n\t\t\t}\n\t\t}\n\n\t\t@BeforeDeserialized()\n\t\tprotected BeforeDeserialized(...argv){};\n\n\t\tstringify(pretty?: boolean | string): string\n\t\t{\n\t\t\tif (pretty === false)\n\t\t\t{\n\t\t\t\tpretty = '';\n\t\t\t}\n\n\t\t\tif (typeof pretty !== 'string')\n\t\t\t{\n\t\t\t\tpretty = '\\t';\n\t\t\t}\n\n\t\t\treturn JSON.stringify(this.serialize(), null, pretty);\n\t\t}\n\n\t\tserialize<T extends D>(): T\n\t\t{\n\t\t\treturn TaJson.serialize(this);\n\t\t}\n\n\t\tstatic deserialize<T extends Base>(json: Partial<T>, options?: IParseOptions): T\n\t\tstatic deserialize<T extends Base, J extends Base.TSTYPE | Partial<T>>(json: J, options?: IParseOptions): T & Base\n\t\tstatic deserialize<T extends Base, J extends Base.TSTYPE | Partial<T>>(json: J, options?: IParseOptions): T & Base\n\t\t{\n\t\t\treturn TaJson.deserialize<T>(json, this, options) as any;\n\t\t}\n\n\t\tstatic parse<T extends Base>(json: string, options?: IParseOptions): T\n\t\t{\n\t\t\treturn TaJson.parse<T>(json, this, options)\n\t\t}\n\n\t\t_isvaild(): boolean\n\t\t{\n\t\t\tlet ls = Object.entries(this.serialize()).filter(r => r[1] != null);\n\n\t\t\treturn ls.length > 0;\n\t\t}\n\n\t}\n\n\texport declare namespace Base\n\t{\n\t\texport interface TSTYPE\n\t\t{\n\t\t\t[k: string]: unknown\n\t\t}\n\t}\n\n}\n\nexport default exports as typeof import('./class');\n"]}