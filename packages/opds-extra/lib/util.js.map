{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";;AAEA,mCAAsC;AACtC,2DAA0E;AAE1E,SAAgB,iBAAiB,CAA2B,SAA8B,EAAE,KAAiB,EAAE,KAE9G;IAEA,IAAI,SAAS,IAAI,IAAI,EACrB;QACC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAC7B;YACC,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;SACxB;QAED,IAAI,MAA+B,CAAC;QAEpC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC7B;YACC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,KAAK,CAAA;SAClC;aAED;YACC,aAAa;YACb,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,CAAA;SACpC;QAED,IAAI,GAAG,GAAI,SAAuB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;YAEvD,IAAI,MAAM,CAAC,CAAC,CAAC,EACb;gBACC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACV;iBACI,IAAI,CAAC,IAAI,IAAI,EAClB;gBACC,IAAI,CAAC,GAAI,KAAmC,CAAC,WAAW,CAAC,CAAQ,CAAC,CAAC;gBAEnE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAChB;oBACC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACV;aACD;YAED,OAAO,CAAC,CAAA;QACT,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,2CAAsB,CAAC,GAAG,CAAC,CAAC;QAE5B,OAAO,GAAG,CAAC;KACX;AAEF,CAAC;AA/CD,8CA+CC;AAED,SAAgB,OAAO,CAAC,KAAmB;IAE1C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC7B;QACC,OAAO,KAAK,CAAA;KACZ;SACI,IAAI,KAAK,IAAI,OAAQ,KAAa,CAAC,IAAI,KAAK,QAAQ,EACzD;QACC,OAAO,KAAK,CAAC,IAAI,CAAA;KACjB;AACF,CAAC;AAVD,0BAUC;AAED,SAAgB,UAAU,CAAC,KAAmB;IAE7C,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAEvB,IAAI,CAAC,IAAI,IAAI,EACb;QACC,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,EAAE,IAAI,mBAAW,EACrB;YACC,OAAO,mBAAW,CAAC,EAAE,CAAC,CAAA;SACtB;QAED,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,IAAI,EAAE,IAAI,mBAAW,EACrB;YACC,OAAO,mBAAW,CAAC,EAAE,CAAC,CAAA;SACtB;QAED,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,IAAI,EAAE,IAAI,mBAAW,EACrB;YACC,OAAO,mBAAW,CAAC,EAAE,CAAC,CAAA;SACtB;QAED,IAAI,CAAC,IAAI,mBAAW,EACpB;YACC,OAAO,mBAAW,CAAC,CAAC,CAAC,CAAA;SACrB;aAED;YACC,OAAO,CAAC,CAAA;SACR;KACD;AACF,CAAC;AAjCD,gCAiCC;AAED,kBAAe,OAAkC,CAAC","sourcesContent":["import { Price } from './v1/core';\nimport { Schema } from './class';\nimport { EnumLinkRel } from './const';\nimport { array_unique, array_unique_overwrite } from 'array-hyper-unique';\n\nexport function typedOrObjectList<A, B extends Schema.Base>(inputList: unknown | unknown[], typeA: A | string, typeB: {\n\tnew(): B\n}): (A | B)[]\n{\n\tif (inputList != null)\n\t{\n\t\tif (!Array.isArray(inputList))\n\t\t{\n\t\t\tinputList = [inputList];\n\t\t}\n\n\t\tlet typeFn: (v: unknown) => boolean;\n\n\t\tif (typeof typeA === 'string')\n\t\t{\n\t\t\ttypeFn = (v) => typeof v === typeA\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ttypeFn = (v) => (v instanceof typeA)\n\t\t}\n\n\t\tlet arr = (inputList as (A | B)[]).reduce(function (a, v)\n\t\t{\n\t\t\tif (typeFn(v))\n\t\t\t{\n\t\t\t\ta.push(v);\n\t\t\t}\n\t\t\telse if (v != null)\n\t\t\t{\n\t\t\t\tlet r = (typeB as any as typeof Schema.Base).deserialize(v as any);\n\n\t\t\t\tif (r._isvaild())\n\t\t\t\t{\n\t\t\t\t\ta.push(r);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a\n\t\t}, []);\n\n\t\tarray_unique_overwrite(arr);\n\n\t\treturn arr;\n\t}\n\n}\n\nexport function hrefURL(value: string | URL): string\n{\n\tif (typeof value === 'string')\n\t{\n\t\treturn value\n\t}\n\telse if (value && typeof (value as URL).href === 'string')\n\t{\n\t\treturn value.href\n\t}\n}\n\nexport function getOPDSRel(value: string | URL): string\n{\n\tlet v = hrefURL(value);\n\n\tif (v != null)\n\t{\n\t\tlet lc = v.toLowerCase();\n\t\tif (lc in EnumLinkRel)\n\t\t{\n\t\t\treturn EnumLinkRel[lc]\n\t\t}\n\n\t\tlc = lc.replace('_', '/');\n\t\tif (lc in EnumLinkRel)\n\t\t{\n\t\t\treturn EnumLinkRel[lc]\n\t\t}\n\n\t\tlc = lc.replace('/', '_');\n\t\tif (lc in EnumLinkRel)\n\t\t{\n\t\t\treturn EnumLinkRel[lc]\n\t\t}\n\n\t\tif (v in EnumLinkRel)\n\t\t{\n\t\t\treturn EnumLinkRel[v]\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn v\n\t\t}\n\t}\n}\n\nexport default exports as typeof import('./util');\n"]}